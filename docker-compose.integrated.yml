version: '3.8'

services:
  # Only the Excalidraw API - uses existing MongoDB
  excalidraw-api:
    build:
      context: ./backend-example
      dockerfile: Dockerfile
    container_name: excalidraw-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:${MONGO_ROOT_PASSWORD}@itica_mongodb:27017/excalidraw?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=https://excalidraw.faku.pro
      - PORT=3002
    ports:
      - "3002:3002"  # Different port to avoid conflict with existing backend
    networks:
      - web-proxy
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      timeout: 5s
      retries: 5
      start_period: 30s
      interval: 30s
    depends_on:
      - db-init

  # Initialize Excalidraw database in existing MongoDB
  db-init:
    image: mongo:7.0
    container_name: excalidraw-db-init
    restart: "no"  # Run once and exit
    environment:
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    networks:
      - web-proxy
    volumes:
      - ./database/mongodb-init.js:/init-excalidraw.js:ro
    command: >
      bash -c "
        echo 'Waiting for MongoDB to be ready...'
        until mongosh --host itica_mongodb:27017 -u admin -p ${MONGO_ROOT_PASSWORD} --authenticationDatabase admin --eval 'db.adminCommand(\"ping\")' > /dev/null 2>&1; do
          sleep 5
          echo 'MongoDB not ready, retrying...'
        done
        echo 'MongoDB ready, initializing Excalidraw database...'
        mongosh --host itica_mongodb:27017 -u admin -p ${MONGO_ROOT_PASSWORD} --authenticationDatabase admin < /init-excalidraw.js
        echo 'Excalidraw database initialized successfully!'
      "

networks:
  web-proxy:
    external: true