name: Deploy to Production

on:
  push:
    branches: [master, main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            # Navigate to project directory
            cd /home/${{ secrets.SSH_USER }}/excalidraw-hosted

            # Pull latest changes
            echo "üîÑ Pulling latest code..."
            git pull origin master

            # Stop existing containers
            echo "üõë Stopping existing containers..."
            docker-compose down || true

            # Remove old images for clean build
            echo "üóëÔ∏è Removing old images..."
            docker image prune -a -f
            docker system prune -f

            # Build and deploy
            echo "üèóÔ∏è Building and deploying..."
            docker-compose up -d --build --force-recreate

            # Wait for container to be healthy
            echo "‚è≥ Waiting for container to be healthy..."
            for i in $(seq 1 30); do
              if docker exec excalidraw-app curl -f http://localhost/health > /dev/null 2>&1; then
                echo "‚úÖ Container is healthy!"
                break
              fi
              echo "Waiting... ($i/30)"
              sleep 10
            done

            # Show status
            echo "üìä Container status:"
            docker-compose ps
            docker-compose logs --tail=10

            echo "üéâ Deployment complete!"
          EOF

      - name: Verify deployment
        run: |
          echo "üîç Verifying deployment..."
          if curl -f -s https://excalidraw.faku.pro/health > /dev/null; then
            echo "‚úÖ Deployment successful! Site is responding."
          else
            echo "‚ùå Deployment may have failed - site not responding"
            exit 1
          fi
